@page "/signin"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Identity
@using Vend.Data

@inject SignInManager<AppUser> SignInManager
@inject NavigationManager Nav

<h3>Sign In</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText @bind-Value="loginModel.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Password</label>
        <InputText @bind-Value="loginModel.Password" class="form-control" type="password" />
    </div>

    <div class="form-check mb-3">
        <InputCheckbox @bind-Value="loginModel.RememberMe" class="form-check-input" />
        <label class="form-check-label">Remember me</label>
    </div>

    <button type="submit" class="btn btn-success">Sign In</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        var result = await SignInManager.PasswordSignInAsync(
            loginModel.Email,
            loginModel.Password,
            loginModel.RememberMe,
            lockoutOnFailure: false);

        if (result.Succeeded)
        {
            Nav.NavigateTo("/");
        }
        else
        {
            errorMessage = "Invalid login attempt.";
        }
    }

    public class LoginModel
    {
        [Required, EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;

        public bool RememberMe { get; set; }
    }
}
